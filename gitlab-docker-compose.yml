version: '3.8'

services:
  postgres:
    image: ${GITLAB_POSTGRES_IMAGE_TAG}
    volumes:
      - gitlab-postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${GITLAB_DB_NAME}
      POSTGRES_USER: ${GITLAB_DB_USER}
      POSTGRES_PASSWORD: ${GITLAB_DB_PASSWORD}
    networks:
      - gitlab-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${GITLAB_DB_NAME}", "-U", "${GITLAB_DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  gitlab:
    image: ${GITLAB_IMAGE_TAG}
    volumes:
      - gitlab-data:/var/opt/gitlab
      - gitlab-logs:/var/log/gitlab
      - gitlab-config:/etc/gitlab
    shm_size: "256m"
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url '${GITLAB_URL}'
        gitlab_rails['gitlab_shell_ssh_port'] = ${GITLAB_SHELL_SSH_PORT}
        nginx['enable'] = true
        nginx['listen_port'] = 80
        nginx['listen_https'] = false
        nginx['proxy_set_headers'] = {
                'X-Forwarded-Proto' => 'https',
                'X-Forwarded-Ssl' => 'on'
        }
        gitlab_rails['db_adapter'] = "${GITLAB_DB_TYPE}"
        gitlab_rails['db_encoding'] = "unicode"
        gitlab_rails['db_host'] = "postgres"
        gitlab_rails['db_database'] = "${GITLAB_DB_NAME}"
        gitlab_rails['db_username'] = "${GITLAB_DB_USER}"
        gitlab_rails['db_password'] = "${GITLAB_DB_PASSWORD}"
        gitlab_rails['smtp_enable'] = true
        gitlab_rails['smtp_address'] = "${GITLAB_SMTP_ADDRESS}"
        gitlab_rails['smtp_port'] = 587
        gitlab_rails['smtp_user_name'] = "${GITLAB_SMTP_USER_NAME}"
        gitlab_rails['smtp_password'] = "${GITLAB_SMTP_PASSWORD}"
        gitlab_rails['smtp_domain'] = "${GITLAB_SMTP_ADDRESS}"
        gitlab_rails['smtp_authentication'] = "login"
        gitlab_rails['smtp_enable_starttls_auto'] = true
        gitlab_rails['smtp_tls'] = false
        gitlab_rails['gitlab_email_from'] = "${GITLAB_EMAIL_FROM}"
        gitlab_rails['gitlab_email_reply_to'] = "${GITLAB_EMAIL_REPLY_TO}"
        postgresql['enable'] = false
        registry['enable'] = false
    networks:
      - gitlab-network
      - traefik-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 240s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gitlab.rule=Host(`${GITLAB_HOSTNAME}`)"
      - "traefik.http.routers.gitlab.service=gitlab"
      - "traefik.http.routers.gitlab.entrypoints=websecure"
      - "traefik.http.services.gitlab.loadbalancer.server.port=80"
      - "traefik.http.routers.gitlab.tls=true"
      - "traefik.http.routers.gitlab.tls.certresolver=letsencrypt"
      - "traefik.http.services.gitlab.loadbalancer.passhostheader=true"
      - "traefik.http.routers.gitlab.middlewares=compresstraefik"
      - "traefik.http.middlewares.compresstraefik.compress=true"
      - "traefik.tcp.routers.gitlab-ssh.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.gitlab-ssh.service=gitlab-ssh"
      - "traefik.tcp.routers.gitlab-ssh.entrypoints=ssh"
      - "traefik.tcp.services.gitlab-ssh.loadbalancer.server.port=22"
      - "traefik.docker.network=traefik-network"
    restart: unless-stopped
    depends_on:
      - postgres
      - traefik

  gitlab-runner-1:
    image: ${GITLAB_RUNNER_IMAGE_TAG}
    volumes:
      - gitlab-runner-config:/etc/gitlab-runner
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - gitlab-network
    restart: unless-stopped

volumes:
  gitlab-data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /opt/traefik-gitlab/volumes/gitlab-data
  gitlab-logs:
  gitlab-config:
  gitlab-runner-config:
  gitlab-postgres:


networks:
  gitlab-network:
    external: true
  traefik-network:
    external: true